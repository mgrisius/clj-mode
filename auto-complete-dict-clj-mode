*'
*1
*2
*3
*agent*
*allow-unresolved-vars*
*assert*handle
*clojure-version*
*command-line-args*
*compile-files*
*compile-path*
*compiler-options*
*data-readers*
*default-data-reader-fn*
*e
*err*
*file*
*flush-on-newline*
*fn-loader*
*in*
*math-context*
*ns*
*out*
*print-dup*
*print-length*
*print-level*
*print-meta*
*print-readably*
*read-eval*
*source-path*
*unchecked-math*
*use-context-classloader*
*verbose-defrecords*
*warn-on-reflection*
+'
-'
->
->>
->ArrayChunk
->AsmReflector
->Constructor
->Field
->JavaReflector
->Method
->Vec
->VecNode
->VecSeq
-cache-protocol-fn
-reset-methods
..
<=
==
>=
ClassResolver
Diff
EqualityPartition
Reflector
TypeReference
accessor
aclone
add-classpath
add-watch
agent
agent-error
agent-errors
aget
alength
alias
all-ns
alter
alter-meta!
alter-var-root
amap
ancestors
and
append-child
apply
apply-template
apropos
are
areduce
array-map
as->
aset
aset-boolean
aset-byte
aset-char
aset-double
aset-float
aset-int
aset-long
aset-short
assert
assert-any
assert-expr
assert-predicate
assoc
assoc!
assoc-in
associative?
atom
atom?
attrs
await
await-for
await1
bases
bean
bigdec
bigint
biginteger
binding
bit-and
bit-and-not
bit-clear
bit-flip
bit-not
bit-or
bit-set
bit-shift-left
bit-shift-right
bit-test
bit-xor
blank?
boolean
boolean-array
booleans
bound-fn
bound-fn*
bound?
branch?
butlast
byte
byte-array
bytes
capitalize
case
cast
catch
char
char-array
char-escape-string
char-name-string
char?
chars
children
chunk
chunk-append
chunk-buffer
chunk-cons
chunk-first
chunk-next
chunk-rest
chunked-seq?
cl-format
class
class?
clear-agent-errors
clojure-version
code-dispatch
coll?
collection-tag
comment
commute
comp
comparator
compare
compare-and-set!
compile
complement
compose-fixtures
concat
cond
cond->
cond->>
condp
conj
conj!
cons
constantly
construct-proxy
contains?
content
content-handler
count
counted?
create-ns
create-struct
cycle
dec
dec'
decimal?
declare
def
default-data-readers
definline
definterface
defmacro
defmethod
defmulti
defn
defn-
defonce
defprotocol
defrecord
defstruct
deftest
deftest-
deftype
delay
delay?
deliver
demunge
denominator
deref
derive
descendants
destructure
diff
diff-similar
difference
dir
dir-fn
disj
disj!
dissoc
dissoc!
distinct
distinct?
do
do-reflect
do-report
do-template
doall
doc
doc
dorun
doseq
dosync
dotimes
doto
double
double-array
doubles
down
drop
drop-last
drop-while
edit
element
emit
emit-element
empty
empty?
end?
ensure
enumeration-seq
equality-partition
error-handler
error-mode
escape
eval
even?
every-pred
every?
ex-data
ex-info
extend
extend-protocol
extend-type
extenders
extends?
false?
ffirst
file-position
file-seq
filter
filterv
finally
find
find-doc
find-keyword
find-ns
find-protocol-impl
find-protocol-method
find-var
first
flag-descriptors
flatten
float
float-array
float?
floats
flush
fn
fn?
fnext
fnil
for
force
format
formatter
formatter-out
frequencies
fresh-line
function?
future
future-call
future-cancel
future-cancelled?
future-done?
future?
gen-class
gen-interface
gensym
get
get-child
get-child-count
get-in
get-method
get-possibly-unbound-var
get-pretty-writer
get-proxy-class
get-thread-bindings
get-validator
group-by
handler-case
hash
hash-combine
hash-map
hash-set
identical?
identity
if
if-let
if-not
ifn?
import
in-ns
inc
inc'
inc-report-counter
index
init-proxy
insert-child
insert-left
insert-right
inspect
inspect-table
inspect-tree
instance?
int
int-array
integer?
interleave
intern
interpose
intersection
into
into-array
ints
io!
is
is-leaf
isa?
iterate
iterator-seq
join
join-fixtures
juxt
keep
keep-indexed
key
keys
keyword
keyword?
keywordize-keys
last
lazy-cat
lazy-seq
left
leftmost
lefts
let
letfn
line-seq
list
list*
list-model
list-provider
list?
load
load-file
load-reader
load-script
load-string
loaded-libs
locking
long
long-array
longs
loop
lower-case
macroexpand
macroexpand-1
macroexpand-all
main
make-array
make-hierarchy
make-node
map
map->Constructor
map->Field
map->Method
map-indexed
map-invert
map?
mapcat
mapv
max
max-key
memfn
memoize
merge
merge-with
meta
method-sig
methods
min
min-key
mod
monitor-enter
monitor-exit
munge
name
namespace
namespace-munge
neg?
new
newline
next
next
nfirst
nil?
nnext
node
not
not-any?
not-empty
not-every?
not=
ns
ns-aliases
ns-imports
ns-interns
ns-map
ns-name
ns-publics
ns-refers
ns-resolve
ns-unalias
ns-unmap
nth
nthnext
nthrest
num
number?
numerator
object-array
odd?
old-table-model
or
parents
parse
parse-timestamp
partial
partition
partition-all
partition-by
path
pcalls
peek
persistent!
pmap
pop
pop!
pop-thread-bindings
pos?
postwalk
postwalk-demo
postwalk-replace
pp
pprint
pprint-indent
pprint-logical-block
pprint-newline
pprint-tab
pr
pr-str
prefer-method
prefers
prev
prewalk
prewalk-demo
prewalk-replace
primitives-classnames
print
print-cause-trace
print-ctor
print-dup
print-length-loop
print-method
print-simple
print-stack-trace
print-str
print-table
print-throwable
print-trace-element
printf
println
println-str
prn
prn-str
project
promise
proxy
proxy-call-with-super
proxy-mappings
proxy-name
proxy-super
pst
push-thread-bindings
pvalues
quot
quote
rand
rand-int
rand-nth
range
ratio?
rational?
rationalize
re-find
re-groups
re-matcher
re-matches
re-pattern
re-quote-replacement
re-seq
read
read
read-instant-calendar
read-instant-date
read-instant-timestamp
read-line
read-string
read-string
realized?
recur
reduce
reduce-kv
reduced
reduced?
reductions
ref
ref-history-count
ref-max-history
ref-min-history
ref-set
refer
refer-clojure
reflect
reify
release-pending-sends
rem
remove
remove
remove-all-methods
remove-method
remove-ns
remove-watch
rename
rename-keys
repeat
repeatedly
repl
repl-caught
repl-exception
repl-prompt
repl-read
repl-requires
replace
replace
replace-first
replicate
report
require
reset!
reset-meta!
resolve
resolve-class
rest
restart-agent
resultset-seq
reverse
reverse
reversible?
right
rightmost
rights
root
root-cause
rseq
rsubseq
run-all-tests
run-tests
satisfies?
second
select
select-keys
send
send-off
send-via
seq
seq-zip
seq?
seque
sequence
sequential?
set
set!
set-agent-send-executor!
set-agent-send-off-executor!
set-break-handler!
set-error-handler!
set-error-mode!
set-pprint-dispatch
set-test
set-validator!
set?
short
short-array
shorts
shuffle
shutdown-agents
simple-dispatch
skip-if-eol
skip-whitespace
slurp
some
some->
some->>
some-fn
sort
sort-by
sorted-map
sorted-map-by
sorted-set
sorted-set-by
sorted?
source
source-fn
special-symbol?
spit
split
split-at
split-lines
split-with
stack-element-str
startparse-sax
str
string?
stringify-keys
struct
struct-map
subs
subseq
subset?
subvec
successful?
supers
superset?
swap!
symbol
symbol?
sync
table-model
tag
take
take-last
take-nth
take-while
test
test-all-vars
test-ns
test-var
testing
testing-contexts-str
testing-vars-str
the-ns
thread-bound?
thread-stopper
throw
time
to-array
to-array-2d
trampoline
transient
tree-model
tree-seq
trim
trim-newline
triml
trimr
true?
try
try-expr
type
type-reflect
typename
unchecked-add
unchecked-add-int
unchecked-byte
unchecked-char
unchecked-dec
unchecked-dec-int
unchecked-divide-int
unchecked-double
unchecked-float
unchecked-inc
unchecked-inc-int
unchecked-int
unchecked-long
unchecked-multiply
unchecked-multiply-int
unchecked-negate
unchecked-negate-int
unchecked-remainder-int
unchecked-short
unchecked-subtract
unchecked-subtract-int
underive
union
unquote
unquote-splicing
up
update-in
update-proxy
upper-case
use
use-fixtures
val
validated
vals
var-get
var-set
var?
vary-meta
vec
vector
vector-of
vector-zip
vector?
walk
when
when-first
when-let
when-not
while
with-bindings
with-bindings
with-bindings*
with-in-str
with-loading-context
with-local-vars
with-meta
with-open
with-out-str
with-pprint-dispatch
with-precision
with-read-known
with-redefs
with-redefs-fn
with-test
with-test-out
write
write-out
xml-seq
xml-zip
zero?
zipmap
zipper
clojure.core
clojure.data
clojure.edn
clojure.instant
clojure.inspector
clojure.main
clojure.pprint
clojure.reflect
clojure.repl
clojure.set
clojure.stacktrace
clojure.string
clojure.template
clojure.test
clojure.walk
clojure.xml
clojure.zip
